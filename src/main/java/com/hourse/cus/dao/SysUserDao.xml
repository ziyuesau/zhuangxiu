<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hourse.cus.dao.SysUserDao">
	<select id="queryObject" resultType="com.hourse.cus.entity.SysUserEntity">
		select * from sys_user where user_id = #{value}
	</select>
	
	<select id="queryList" resultType="com.hourse.cus.entity.SysUserEntity">
		select u.* from sys_user u
		<where>
			<if test="username != null and username.trim() != ''">
				and u.`username` like concat('%',#{username},'%')
			</if>

			<!--  数据过滤  -->
			${filterSql}
		</where>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by u.${sidx} ${order}
			</when>
			<otherwise>
				order by u.user_id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
	<select id="queryTotal" resultType="int">
		select count(*) from sys_user u
		<where>
			<if test="username != null and username.trim() != ''">
				and u.`username` like concat('%',#{username},'%')
			</if>

			<!--  数据过滤  -->
			${filterSql}
		</where>
	</select>
	

	

	
	<select id="queryByUserName" resultType="com.hourse.cus.entity.SysUserEntity">
		select * from sys_user where username = #{username}
	</select>
	
	<insert id="save" parameterType="com.hourse.cus.entity.SysUserEntity" useGeneratedKeys="true" keyProperty="userId">
		insert into sys_user
		(
			`user_id`, 
			`username`, 
			`password`,
			`salt`,
			`email`, 
			`phone`, 
			`status`,
			`user_type`,
				`realname`,`class_id`,
			`create_time`
		)
		values
		(
			#{userId}, 
			#{username}, 
			#{password},
			#{salt},
			#{email}, 
			#{phone}, 
			#{status},
			#{userType},	#{realname},#{classId},
			#{createTime}
		)
	</insert>
	 
	<update id="update" parameterType="com.hourse.cus.entity.SysUserEntity">
		update sys_user 
		<set> 
			<if test="username != null">`username` = #{username}, </if>
			<if test="password != null">`password` = #{password}, </if>
			<if test="email != null">`email` = #{email}, </if>
			<if test="phone != null">`phone` = #{phone}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="userType != null">`user_type` = #{userType}, </if>
			<if test="realname != null">`realname` = #{realname}, </if>
			
			<if test="classId != null">`class_id` = #{classId}, </if>
		</set>
		where user_id = #{userId}
	</update>
	
	<update id="updatePassword" parameterType="map">
		update sys_user set `password` = #{newPassword} 
			where user_id = #{userId} and password = #{password}
	</update>
	
	<delete id="deleteBatch">
		delete from sys_user where user_id in 
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
		;
		
	</delete>

</mapper>